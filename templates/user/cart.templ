package user_templates

import "github.com/w1png/go-htmx-ecommerce-template/models"
import "github.com/w1png/go-htmx-ecommerce-template/utils"
import "fmt"
import "github.com/w1png/go-htmx-ecommerce-template/file_storage"
import "github.com/w1png/go-htmx-ecommerce-template/templates/components"

templ Cart() {
	<div
		class="flex flex-row justify-end fixed w-screen h-screen left-0 right-0 top-0 bottom-0 bg-black/30 z-50"
		hx-get="/api/cart"
		hx-trigger="cart_updated from:body"
		hx-target="#cart-products"
		hx-swap="innerHTML"
		x-show="cart_open"
		x-cloak
	>
		<div
			class="h-screen md:max-w-[28rem] w-screen bg-white flex flex-col"
			@click.outside="cart_open = false"
			x-show="cart_open"
			x-transition-delay.300ms
			x-transition:enter-start="opacity-0 scale-x-90 translate-x-full"
			x-transition:enter-end="opacity-100 scale-x-100 translate-x-0"
			x-transition:leave-start="opacity-100 scale-x-100 translate-x-0"
			x-transition:leave-end="opacity-0 scale-x-90 translate-x-full"
		>
			<div class="h-16 w-full px-6 py-4 text-2xl font-bold flex flex-row justify-between items-center">
				<p>Корзина</p>
				<img class="h-6 aspect-square cursor-pointer" src="/static/close.svg" @click="cart_open = false"/>
			</div>
			<div class="grow flex flex-col" id="cart-products">
				@CartProducts(utils.GetCartFromContext(ctx).Products)
			</div>
		</div>
	</div>
}

templ CartProduct(cart_product *models.CartProduct) {
	<div class="w-full h-28 flex flex-row gap-4">
		<img
			class="h-full aspect-square object-cover rounded-xl bg-secondary"
			src={ file_storage.ObjectStorageId(cart_product.Thumbnail).GetUrl("image", "webp") }
			x-init="!$el.complete && $el.classList.add('animate-pulse')"
			@load="$el.classList.remove('animate-pulse')"
		/>
		<div class="flex flex-col grow justify-between">
			<a
				href={ templ.SafeURL(fmt.Sprintf("/products/%s", cart_product.Slug)) }
				hx-get={ fmt.Sprintf("/api/products/%s",
      cart_product.Slug) }
				hx-push-url={ fmt.Sprintf("/products/%s", cart_product.Slug) }
				hx-boost="true"
				hx-swap="innerHTML transition:true"
				hx-target="body"
				@click="document.body.classList.remove('overflow-hidden')"
			>
				{ 
      cart_product.Title }
			</a>
			<div class="flex flex-row gap-4">
				<p class={ "text-xl font-bold" , templ.KV("line-through text-base", cart_product.DiscountPrice> 0) }>
					{ 
        fmt.Sprintf("%d", cart_product.Price) }₽
				</p>
				if cart_product.DiscountPrice > 0 {
					<p class="text-xl font-bold">{ fmt.Sprintf("%d", cart_product.DiscountPrice) }₽</p>
				}
			</div>
			@components.AddToCartButton(cart_product.ProductId, cart_product.Quantity)
		</div>
	</div>
}

templ CartProducts(cart_products []*models.CartProduct) {
	if len(cart_products) == 0 {
		<div class="flex flex-col grow items-center justify-center">
			<p class="text-2xl font-bold">Корзина пуста</p>
		</div>
	} else {
		<div class="grow overflow-y-scroll flex flex-col gap-6 p-4">
			for _, cart_product := range cart_products {
				<span x-show="cart_open">
					@CartProduct(cart_product)
				</span>
			}
		</div>
	}
	<div class="h-40 w-full flex flex-col items-center justify-center gap-4 px-4">
		<div class="flex flex-row w-full justify-between">
			<p class="text-2xl font-bold">Итого</p>
			<p class="text-2xl font-bold">{ fmt.Sprintf("%d", utils.GetCartFromContext(ctx).GetTotalPrice()) }₽</p>
		</div>
		if len(cart_products) == 0 {
			<button class="submit-disabled" disabled>Оформить заказ</button>
		} else {
			<a
				class={ "w-fit submit px-10" }
				hx-get="/api/checkout"
				href="/checkout"
				hx-push-url="/checkout"
				hx-swap="outerHTML transition:true"
				hx-target="body"
				@click="document.body.classList.remove('overflow-hidden')"
			>Оформить заказ</a>
		}
		<button class="hover:underline" hx-get="/api/cart/clear">Очистить корзину</button>
	</div>
}
