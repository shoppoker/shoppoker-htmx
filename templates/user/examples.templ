package user_templates

import "github.com/w1png/go-htmx-ecommerce-template/models"
import "github.com/w1png/go-htmx-ecommerce-template/file_storage"
import "github.com/w1png/go-htmx-ecommerce-template/templates/scripts"
import "github.com/w1png/go-htmx-ecommerce-template/templates/components"
import "fmt"

templ paginationButton() {
	<svg
		viewBox="0 0 18 10"
		fill="none"
		xmlns="http://www.w3.org/2000/svg"
		class="text-accent group-hover:text-white -rotate-90"
	>
		<path
			d="M8.09227 9.63386C8.59433 10.122 9.40968 10.122 9.91175 9.63386L17.6235 2.13533C18.1255 1.64714 18.1255 0.854325 17.6235 0.366139C17.1214 -0.122046 16.306 -0.122046 15.804 0.366139L9 6.98204L2.19603 0.370045C1.69396 -0.118141 0.878612 -0.118141 0.376548 0.370045C-0.125516 0.858231 -0.125516 1.65104 0.376548 2.13923L8.08825 9.63777L8.09227 9.63386Z"
			fill="currentColor"
		></path>
	</svg>
}

templ ExampleCard(example *models.Example) {
	<div
		class="max-w-[300px] select-none flex flex-col gap-4 opacity-0 scale-x-50"
		x-id="['preview-slider', 'prev-preview-slider', 'next-preview-slider']"
		data-intersection-observer="opacity-0 scale-x-50"
		data-intersection-observer-delay="300"
	>
		@intersectionObserver()
		<div class="relative">
			if len(example.Images) == -1 {
				<div
					class="absolute top-0 bottom-0 right-0 left-0 w-full h-full opacity-50 flex flex-row justify-between z-20 px-2 mobile-hidden"
				>
					<div class="h-full w-8 flex items-center justify-center" :id="$id('prev-preview-slider')">
						<div
							class="w-full aspect-square rounded-full bg-white p-2 flex items-center justify-center rotate-180 cursor-pointer hover:scale-105"
							x-init="prev_loaded = true"
						>
							@paginationButton()
						</div>
					</div>
					<div class="h-full w-8 flex items-center justify-center" :id="$id('next-preview-slider')">
						<div
							class="w-full aspect-square rounded-full bg-white p-2 flex items-center justify-center cursor-pointer hover:scale-105"
							x-init="next_loaded = true"
						>
							@paginationButton()
						</div>
					</div>
				</div>
			}
			<div
				:id="$id('preview-slider')"
				x-init="createSlider($id('preview-slider'), $id('prev-preview-slider'), $id('next-preview-slider'))"
				class="z-0"
			>
				for _, image := range example.Images {
					<img
						class="rounded-xl w-full aspect-video bg-secondary object-contain"
						src={ file_storage.ObjectStorageId(image).GetUrl("image", "webp") }
						x-init="!$el.complete && $el.classList.add('animate-pulse')"
						@load="$el.classList.remove('animate-pulse')"
					/>
				}
			</div>
		</div>
		<p class="text-2xl font-bold">{ example.Title }</p>
	</div>
}

templ ExamplesList(examples []*models.Example, next_page int) {
	for _, example := range examples {
		@ExampleCard(example)
	}
	if len(examples) == models.EXAMPLES_PER_PAGE {
		<span
			class="hidden"
			hx-get={ fmt.Sprintf("/api/examples/page/%d", next_page) }
			hx-target="#examples-list"
			hx-swap="beforeend"
			hx-trigger="revealed"
		></span>
	}
}

func constructBreadcrumbExamplesArray() []components.BreadcrumbElement {
	return []components.BreadcrumbElement{
		{
			Title:      "Главная",
			Url:        "/",
			RequestUrl: "/api/index",
		},
		{
			Title:      "Примеры работ",
			Url:        "/examples",
			RequestUrl: "/api/examples",
		},
	}
}

templ examplesPage(examples []*models.Example, next_page int) {
	<div class="container mx-auto mt-24" hx-boost="true" hx-target="body" hx-swap="innerHTML transition:true">
		<div class="flex flex-col gap-10 px-4 py-6">
			<div class="flex flex-col gap-4">
				<h1 class="font-bold text-5xl">Примеры работ</h1>
				@components.Breadcrumb(constructBreadcrumbExamplesArray())
			</div>
			<div class="w-full gap-4 grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4" id="examples-list">
				@ExamplesList(examples, next_page)
			</div>
		</div>
	</div>
}

templ ExamplesApi(examples []*models.Example) {
	@scripts.SetTitle("Примеры работ")
	@Navbar()
	@examplesPage(examples, 2)
}

templ Examples(examples []*models.Example) {
	@Base("Примеры работ") {
		@scripts.SetTitle("Примеры работ")
		@Navbar()
		@examplesPage(examples, 2)
	}
}
