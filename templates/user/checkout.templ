package user_templates

import "github.com/w1png/go-htmx-ecommerce-template/models"
import "fmt"
import "github.com/w1png/go-htmx-ecommerce-template/templates/components"
import "github.com/w1png/go-htmx-ecommerce-template/templates/scripts"

templ CheckoutComplete(order *models.Order) {
	<div class="container mx-auto min-h-screen flex flex-col items-center justify-center gap-4">
		<h1 class="text-3xl lg:text-4xl xl:text-5xl font-bold">Заказ №{ fmt.Sprintf("%d", order.ID) } оформлен</h1>
		<h2 class="text-xl xl:text-2xl">
			Благодарим вас за заказ! Чек с информацией о заказе отправлен вам на почту: { 
    order.Email }
		</h2>
		<a class="submit" href="/" hx-get="/api/index" hx-push-url="/" hx-swap="outerHTML transition:true" hx-target="body">
			Вернуться на
			главную
		</a>
	</div>
}

func GetForm(d models.DeliveryType) templ.Component {
	switch d {
	case models.DeliveryTypePickup:
		return DeliveryTypePickupForm()
	case models.DeliveryTypeDelivery:
		return DeliveryTypeDeliveryForm()
	default:
		return DeliveryTypePickupForm()
	}
}

templ DeliveryTypePickupForm() {
	<span id="delivery_type_form"></span>
}

templ DeliveryTypeDeliveryForm() {
	<div class="flex flex-col gap-2" id="delivery_type_form">
		@components.LabeledInput("Город", templ.Attributes{"placeholder": "Москва", "required": true, "autocomplete": "street-adress", "name": "city"}, "")
		@components.LabeledInput("Адрес", templ.Attributes{"placeholder": "ул. 2-й Новоподмосковный переулок, д. 5", "name": "adress",
			"required": true, "autocomplete": "street-adress"}, "")
	</div>
}

templ checkoutPage() {
	<div class="container mx-auto min-h-screen p-8 mt-24 flex justify-center items-center">
		<div class="w-[30rem] border-2 rounded-xl flex flex-col p-4" id="checkout" hx-ext="response-targets">
			<div class="flex flex-col gap-4" id="checkout_products"></div>
			<form
				class="flex flex-col gap-2 p-4"
				hx-post="/api/checkout"
				hx-target="#checkout"
				hx-target-error="#checkout-error"
				hx-indicator="#checkout_loading"
				hx-swap="outerHTML"
			>
				@components.LabeledInput("ФИО", templ.Attributes{"placeholder": "Иванов Иван Иванович", "required": true, "name": "name"}, "")
				<div class="flex flex-col gap-1">
					<label for="phone_number" class="text-nowrap select-none">Номер телефона</label>
					<div class="relative group overflow-hidden">
						<input
							type="number"
							name="phone_number"
							id="phone_number"
							class="rounded-xl border-2 border-border py-4 pl-10 pr-6 w-full peer placeholder-shown:pl-6 focus:pl-10"
							placeholder="9999999999"
						/>
						<span
							class="opacity-100 peer-placeholder-shown:opacity-0 peer-focus:opacity-100 text-black peer-placeholder-shown:text-[#9CA3B0] h-full aspect-square flex items-center justify-center absolute top-0 left-0 translate-x-0 peer-placeholder-shown:-translate-x-full peer-focus:translate-x-0 pointer-events-none"
						>+7</span>
					</div>
				</div>
				@components.LabeledInput("Email", templ.Attributes{"placeholder": "email@example.com", "type": "email",
					"required": true, "name": "email"}, "")
				@components.LabeledTextarea("Сообщение", templ.Attributes{"name": "message", "placeholder": "Комментарий"}, "")
				<label clas="labeled-input-parent relative">
					Способ доставки
					<select
						name="delivery_type"
						id="delivery_type"
						hx-get="/api/checkout/delivery_type_form"
						hx-target="#delivery_type_form"
						class="select"
					>
						for _, delivery_type := range models.DELIVERY_TYPES_ARRAY {
							<option value={ fmt.Sprintf("%d", delivery_type) }>{ delivery_type.ToString() }</option>
						}
					</select>
				</label>
				@GetForm(models.DELIVERY_TYPES_ARRAY[0])
				@components.Loading("checkout_loading")
				<p id="checkout-error" class="text-sm text-red-400"></p>
				<button class="submit">Оформить заказ</button>
			</form>
		</div>
	</div>
}

templ CheckoutApi() {
	@scripts.SetTitle("Оформление заказа")
	@Navbar()
	@checkoutPage()
}

templ Checkout() {
	@Base("Оформление заказа") {
		@checkoutPage()
	}
}
